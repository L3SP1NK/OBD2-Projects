#include commonSupplement.ecu

[Menu]
   menuDialog = main
      menu = "Data Logging"
        subMenu = tsSupplementalFields,   "Performance and Economy Fields"

[UserDefined]
   dialog = tsInjectorConstants, "Injector Size"
      field = "number of Injectors", tsNumInjectors
      field = "Injector Size Units", tsInjSizeConstant
      field = "Primary Injector Size", tsPrimaryInjectorSize

   dialog = tsUnitPreferences, "Fuel Flow Preferences"
      field = "Speed Units", tsDistanceUnits
      field = "Fuel Consumption", tsFuelConsumptionUnits

   dialog = tsFieldReferences, "Input Sources"
      field = "Vehicle Speed Source", tsSpeedSource

   dialog = tsHpInputs, "Horsepower constants"
      field = "Vehicle Weight", tsVehicleWeight
      field = "Vehicle Weight Units", tsWeightUnits
      field = "Tire Pressure", tsTirePressure
      field = "Frontal Area", tsFrontalArea
      field = "Frontal Area Units", tsFrontalUnits
      field = "Aerodynamic Drag Coefficient", tsVehicleDragCoef
      field = "Log Power Fields", tsLogPowerFields

   dialog = tsFuelSpecs, ""
      panel = tsInjectorConstants
      panel = tsUnitPreferences
      panel = tsFieldReferences

   dialog = tsSupplementalFields, "Vehicle Specifications", xAxis
      panel = tsFuelSpecs
      panel = tsHpInputs

[OutputChannels]
   
   ;testAccumulate = { lastValue(rpm) >= 0 ? rpm + lastValue(testAccumulate) : rpm }
   ;testAccumulate = { accumulate( rpm ) }
   ;lagRpm = { pastValue(rpm, 20) }
   ;testTimeNow = { timeNow }
   ;testGPS = { GPS.gpsSpeedKPH }
   
   ; Normalize the fields. This will change for each firmware family
   tsVehicleSpeedMph = { tsSpeedSource == 0 ? GPS.gpsSpeedMPH : (tsSpeedSource == 2 ? userSpeedMph : 0 )  }, "MPH" ; provides selector for speed channel

   tsInjectorSize    = { tsInjSizeConstant == 0 ? tsPrimaryInjectorSize * 10.5 : tsPrimaryInjectorSize }, "cc/min" ;normalized to cc/min
   tsSmoothRPM     = { SmoothBasic(INP_engineRPM, 2) }, "RPM";, hidden ; override with a slightly smoothed RPM

   tsWorkingRpm = { INP_engineRPM }, "RPM", hidden
   
   userSpeedMph = { 0 }, "MPH" ; place holder for references. User needs to over-ride this in the ini.
   
   tsDutyCycleReal = { (INP_injectorsInPulseWidth1-1) / INP_injectorsInPeriod1 }, hidden
   
   tsFuelFlow= { tsDutyCycleReal*tsInjectorSize*tsNumInjectors/100 }, "cc/min" ;
   pulseWidth1 = { INP_injectorsInPulseWidth1 }, hidden
   

[GaugeConfigurations]

[Datalog]

[PcVariables]
    tsSpeedSource             =   bits,  U08,   [0:1], "GPS Speed", "INVALID", "userSpeedMph", "INVALID"
    tsNumInjectors            =   bits,  U08,   [0:2], "INVALID", "1", "2", "3", "4", "INVALID", "INVALID", "INVALID"

[ConstantsExtensions]
    defaultValue = tsSpeedSource, 0
    
[SettingContextHelp]
    tsSpeedSource = "Select the vehicle speed input source:\n - GPS Speed to use a GPS Dongle connected to your PC.\n - Controller VSS to use Vehicle Speed Sensor data connected to your ECU if supported by your ecu and installed firmware\n - userSpeedMph a OutputChannel defined in the custom.ini file to derive the vehicle speed in MPH by any other means. Once you defined this field in MPH, KPH will be reported on OutputChannel tsVehicleSpeedKph also.."
